 installs : 
 	  1- install curl : 				apt-get install curl
          2- install git : 				apt-get install git
          3- install zsh : 				sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
1- git init : 						change directory to reposicory for git actions.
2- git config --global user.name "your name" : 		set name for repository.
3- git config --global user.email "your email" :	set email for repository.
4- git clone <URL> : 					get repositories from github to make action and changing.
   git clone --branch=(barnchname) <URL>		to get knowing branch with namewe want
   git clone --branch=(barnchname) --denf=(numbercommit) <URL>	to fastest download lastest changes with number of last commmits
5- git status : 					see and configor status files in git.
6- git add (filename or -A) :				add file or files to commit git. -A is for all of files and add all of them to git together.
7- git commit -m "comment" :				save status added files in commit git and write a good comment.
   	1- git commit					file commit will be open and we can write our comment about changings
   	2- --amend -m "comment" : 			when we want to save new changes to last commit and changes comment of commit 
8- git diff :						see changes what happened in git for file.
	1- HEAD~number : 				see changes in stage with number of it in HEAD. 
	2- HEAD~number filename : 			see changes in stage for a file.
	3- (hashname hashname)or(HEAD~number HEAD~number) : to comparition between two changes
9- .gitignore :						if we want to create a file and chne this file without change status in git we create .gitignore file and write inside .gitignore *.typefile(it means any file with type we want it.) and save it to git status with commands.
0- git stash :  					save changes without getting to commit and getback to stage after another changes.
	1- show :					to show  what changes is stash
	2- pop or pop stash@{number of change\} : 	pop for move all changes to stage and pop stash@{no\} for any change is stash
	3- -u 						to move files to stash when they are untraked and not add to staging
	4- -a 						to add ignored files to stash
							we want to move to stage and save or another thing with it.
11- git log --oneline --graph : 			to wath changes has saves to git in commit with hash address and commit comments.
12- git balme filename : 				to see any changes with details saved in git with number of lines.
13- git tag (tag name) (hash name of commit) :		if we want to find a commit with a name we use this command and in tagname write name for tag and in hashname
							write hahs of the commit.for example : git tag explain-about-command-diff 528a389.
14- git reflog : 					see all changes happened in reposotory.
15- git clean : 					when we create file or directory and we want to remove it before add files to staging
	1- -n : 					just tell us what file or files will be remove and do not remove files.
	2- -nd : 					this command show created files in directorys too.
	3- -fd : 					removes all files in every where force.
	4- -id :					asking for remove and show you options.
	5- (-ix or -fx)or(-dix or -dfx): 		Delete files that have been ignored by the .gitignore like text2.log.(d for files in folders)
16- git revert (hashname-commit): 			when we create a commit and use revert,automatically create new commit with delete changes in that commit we called by hashname.
17- git reset :						restart all changes we want
	1- --hard hashname commit :			after this hashname all of changes will be remove and do not back again.
	2- --soft hashname commit : 			with this command all of changes after hashname will go to unstaged and we can delete or change commits with anything.
18- git rm :						rm delete any file in local folder and in git also.
19- create ssh key :
	1- ssh-keygen
	2- cat id-rsa.pub :				copy this code to github.in github go to settnigs ans go to "ssh and gpt keys" and create new ssh key and paste code to key table.
	3- eval $( ssh-agent -s )
	4- ssh-add id_rsa
20- https://github.com/username.keys : 			with keys after username we can see public ssh keys
